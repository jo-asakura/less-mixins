// LESS Mixin collection
// by Alexander Marinenko
// v.1.2.4
// -------------------------
//

// Absolute Positioned
// -------------------------
.abs-pos(@top: auto, @right: auto, @bottom: auto, @left: auto)
{
    bottom: @bottom;
    left: @left;
    position: absolute;
    right: @right;
    top: @top;
}

// Animation
// ----------------
.animation(@value)
{
    -webkit-animation: @value;
    -o-animation: @value;
    -moz-animation: @value;
    animation: @value;
}

// Appearance
// ----------------
.appearance(@value)
{
    -webkit-appearance: @value;
    -moz-appearance: @value;
    appearance: @value;

    .reset()
    {
        .appearance(none);
    }
}

// The backface-visibility property defines whether or not an element should be visible when not facing the screen
// -------------------------
.backface-visibility(@value: hidden)
{
    -webkit-backface-visibility: @value; // Chrome and Safari
    -moz-backface-visibility: @value; // Firefox
    backface-visibility: @value;
}

// Background clipping
// ----------------
.background-clip(@value: border-box)
{
    -moz-background-clip: @value;
    -webkit-background-clip: @value;
    background-clip: @value;
}

// Background origin
// ----------------
.background-origin(@value: padding-box)
{
    -moz-background-origin: @value;
    -webkit-background-origin: @value;
    background-origin: @value;
}

// Background size
// ----------------
.background-size(@value)
{
    -moz-background-size: @value;
    -webkit-background-size: @value;
    -o-background-size: @value;
    background-size: @value;
}

// Border Radius
// ----------------
.border-radius(@value: 5px)
{
    -moz-border-radius: @value;
    -webkit-border-radius: @value;
    border-radius: @value;
    .background-clip(padding-box);  // stops bg color from leaking outside the border
}
.border-radius(@value1, @value2)
{
    .border-radius(~"@{value1}/@{value2}");
}
.border-top-radius(@value)
{
    -moz-border-top-right-radius: @value;
    -webkit-border-top-right-radius: @value;
    border-top-right-radius: @value;
    -moz-border-top-left-radius: @value;
    -webkit-border-top-left-radius: @value;
    border-top-left-radius: @value;
    .background-clip(padding-box);
}
.border-right-radius(@value)
{
    -moz-border-bottom-right-radius: @value;
    -webkit-border-bottom-right-radius: @value;
    border-bottom-right-radius: @value;
    -moz-border-top-right-radius: @value;
    -webkit-border-top-right-radius: @value;
    border-top-right-radius: @value;
    .background-clip(padding-box);
}
.border-bottom-radius(@value)
{
    -moz-border-bottom-right-radius: @value;
    -webkit-border-bottom-right-radius: @value;
    border-bottom-right-radius: @value;
    -moz-border-bottom-left-radius: @value;
    -webkit-border-bottom-left-radius: @value;
    border-bottom-left-radius: @value;
    .background-clip(padding-box);
}
.border-left-radius(@value)
{
    -moz-border-bottom-left-radius: @value;
    -webkit-border-bottom-left-radius: @value;
    border-bottom-left-radius: @value;
    -moz-border-top-left-radius: @value;
    -webkit-border-top-left-radius: @value;
    border-top-left-radius: @value;
    .background-clip(padding-box);
}

// Box shadow
// ----------------
.box-shadow(...)
{
    @fnParseArgs:
        ~`parseArgs = function (a, defaultValue) {
            var arg = a.replace("[", "").replace("]", "") || defaultValue;
            if (!/^#?\w*%?([ X])/.test(arg)) {
                arg = arg.replace(/,(?=[^()]*\))/g, '--').replace(/,/g, "").replace(/--/g, ',');
            }
            return arg;
        }`;

    -moz-box-shadow: ~`parseArgs("@{arguments}", "none")`;
    -webkit-box-shadow: ~`parseArgs("@{arguments}", "none")`;
    box-shadow: ~`parseArgs("@{arguments}", "none")`;
}

// Box sizing
// ----------------
.box-sizing(@value: border-box)
{
    -moz-box-sizing: @value;
    -webkit-box-sizing: @value;
    box-sizing: @value;
}

// Center-align a block level element
// ----------------
.center-block()
{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

// Clearfix
// ----------------
.clearfix()
{
    & { *zoom: 1; }
    &:before, &:after { content: ''; display: table; }
    &:after { clear: both; }
}

// Flex definitions
// ----------------
.flex
{
    .container
    {
        .align-content(@value: stretch)
        {
            -moz-align-content: @value;
            -webkit-align-content: @value;
            -ms-align-content: @value;
            align-content: @value;
        }

        .align-items(@value: flex-start)
        {
            -moz-align-items: @value;
            -webkit-align-items: @value;
            -ms-align-items: @value;
            align-items: @value;
        }

        .direction(@value: row)
        {
            -moz-flex-direction: @value;
            -webkit-flex-direction: @value;
            -ms-flex-direction: @value;
            flex-direction: @value;
        }

        .display()
        {
            display: -moz-flex;
            display: -webkit-flex;
            display: -ms-flex;
            display: flex;
        }

        .flex-flow(@direction: row, @wrap: nowrap)
        {
            -moz-flex-flow: @direction @wrap;
            -webkit-flex-flow: @direction @wrap;
            -ms-flex-flow: @direction @wrap;
            flex-flow: @direction @wrap;
        }

        .flex-wrap(@value: nowrap)
        {
            -moz-flex-wrap: @value;
            -webkit-flex-wrap: @value;
            -ms-flex-wrap: @value;
            flex-wrap: @value;
        }

        .justify-content(@value: flex-start)
        {
            -moz-justify-content: @value;
            -webkit-justify-content: @value;
            -ms-justify-content: @value;
            justify-content: @value;
        }
    }

    .item
    {
        .align-self(@value: stretch)
        {
            -moz-align-self: @value;
            -webkit-align-self: @value;
            -ms-align-self: @value;
            align-self: @value;
        }

        .flex(@value: 1)
        {
            -moz-flex: @value;
            -webkit-flex: @value;
            -ms-flex: @value;
            flex: @value;
        }

        .order(@value: 1)
        {
            -moz-order: @value;
            -webkit-order: @value;
            -ms-order: @value;
            order: @value;
        }
    }
}

// Font Smoothing
// ----------------
.font-smoothing()
{
    .text-shadow(1px 1px 1px rgba(0, 0, 0, 0.004));
    -webkit-font-smoothing: antialiased;
}

// inline-block + IE7 fix
// ----------------
.display-inline(@importance: '')
{
    display: ~"inline-block @{importance}";
    *display: ~"inline @{importance}";
    *zoom: 1;
}

// Define link states
// ----------------
.link(@color: #0026ff, @textDecoration: none, @colorActive: #0094ff, @textDecorationActive: none, @colorVisited: @color, @textDecorationVisited: @textDecoration)
{
    color: @color;
    text-decoration: @textDecoration;

    &:visited
    {
        color: @colorVisited;
        text-decoration: @textDecorationVisited;
    }

    &:hover,
    &:focus
    {
        color: @colorActive;
        text-decoration: @textDecorationActive;
    }
}

// Hide tap highlight
// ----------------
.no-tap-style()
{
    -webkit-tap-highlight-color: rgba(0,0,0,0);
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

// Opacity
// ----------------
.opacity(@opacity)
{
    @opacity-ie: @opacity * 100;
    -ms-filter: ~"'progid:DXImageTransform.Microsoft.Alpha(Opacity=@{opacity-ie})'";    // IE 8
    filter: ~"alpha(opacity=@{opacity-ie})";                                            // IE 5-7
    -moz-opacity: @opacity;                                                             // Netscape
    -khtml-opacity: @opacity;                                                           // Safari 1.x
    opacity: @opacity;                                                                  // Good browsers
}

// Placeholder text
// -------------------------
.placeholder(@color: #aaa, @font-style: normal, @font-size: 1em)
{
    .define(@color, @font-style, @font-size)
    {
        color: ~'@{color}';
        font-size: ~'@{font-size}';
        font-style: ~'@{font-style}';
    }

    // keep the string values because we need to be able to handle '!important'
    // -------------------------
    ::-webkit-input-placeholder
    {
        .define(@color, @font-style, @font-size);
    }
    ::-moz-placeholder
    {
        .define(@color, @font-style, @font-size);
    }
    :-ms-input-placeholder
    {
        .define(@color, @font-style, @font-size);
    }
    input:-moz-placeholder
    {
        .define(@color, @font-style, @font-size);
    }

    // set placeholder watermark style for IE8-9
    // -------------------------
    .watermark
    {
        .define(@color, @font-style, @font-size);
    }
}

.placeholderOnElement(@color: #aaa, @font-style: normal, @font-size: 1em)
{
    .define(@color, @font-style, @font-size)
    {
        color: ~'@{color}';
        font-size: ~'@{font-size}';
        font-style: ~'@{font-style}';
    }

    // keep the string values because we need to be able to handle '!important'
    // -------------------------
    &::-webkit-input-placeholder
    {
        .define(@color, @font-style, @font-size);
    }
    &::-moz-placeholder
    {
        .define(@color, @font-style, @font-size);
    }
    &:-ms-input-placeholder
    {
        .define(@color, @font-style, @font-size);
    }
    &:-moz-placeholder
    {
        .define(@color, @font-style, @font-size);
    }

    // set placeholder watermark style for IE8-9
    // -------------------------
    &.watermark
    {
        .define(@color, @font-style, @font-size);
    }
}

// Retina Images
// Usage: div.logo { .image-2x("logo2x.png", 100px, 25px); background: url("logo.png") no-repeat; }
// ----------------
.image-2x(@image, @width, @height)
{
    @mozPixelRatio: ~"(min--moz-device-pixel-ratio: 1.3)";
    @operaPixelRatio: ~"(-o-min-device-pixel-ratio: 2.6/2)";
    @webkitPixelRatio: ~"(-webkit-min-device-pixel-ratio: 1.3)";
    @pixelRatio: ~"(min-device-pixel-ratio: 1.3)";
    @minResolution: ~"(min-resolution: 1.3dppx)";

    @media @mozPixelRatio, @operaPixelRatio, @webkitPixelRatio, @pixelRatio, @minResolution
    {
        // on retina, use image that's scaled by 2
        .background-size(@width @height);
        background-image: url(@image);
    }
}

// Resize anything
// ----------------
.resizable(@direction: none)
{
    resize: @direction; // Options: none, horizontal, vertical, both
    //overflow: auto; // Safari fix
}

// Scroll bars
// ----------------
.scroll-bars
{
    // Auto hiding scroll bars (IE10 only)
    // ----------------
    .auto-hide()
    {
        -ms-overflow-style: -ms-autohiding-scrollbar;
    }

    // Enhance scroll bars (Chrome only)
    // ----------------
    .enhance(@width: 5px, @trackColor: #fefefe, @thumbColor: #ABA293, @thumbRadius: 4px)
    {
        ::-webkit-scrollbar
        {
            width: @width;
        }

        ::-webkit-scrollbar-track
        {
            background: @trackColor;
        }

        ::-webkit-scrollbar-thumb
        {
            background: @thumbColor;
            border-radius: @thumbRadius;
        }
    }
}

// Sizing shortcuts
// -------------------------
.size(@height, @width)
{
    height: @height;
    width: @width;
}
.square(@size)
{
    .size(@size, @size);
}
.circle(@size)
{
    .border-radius(50%);
    .square(@size);
}
.stretch(@top, @right, @bottom, @left)
{
    bottom: @bottom;
    left: @left;
    right: @right;
    top: @top;
}

// Spacing The Bottom of Block
// ----------------
.spacing-the-bottom(@marginBottom: 0, @paddingBottom: 0)
{
    & > *:last-child,
    & > *:last-child > *:last-child,
    & > *:last-child > *:last-child > *:last-child
    {
        margin-bottom: @marginBottom;
        padding-bottom: @paddingBottom;
    }
}

// Text overflow
// ----------------
.text-overflow(@value: ellipsis)
{
    -ms-text-overflow: @value;
    -o-text-overflow: @value;
    text-overflow: @value;
    overflow: hidden;
    white-space: nowrap;

    .ie &
    {
        -ms-word-wrap: normal;
        word-wrap: normal;
    }
}

// Multiline text overflow (Chrome only)
// ----------------
.text-overflow-multiline(@lines: 3, @orient: vertical, @type: ellipsis)
{
    .text-overflow(@type);
    -webkit-line-clamp: @lines;
    -webkit-box-orient: @orient;
    display: block;
    display: -webkit-box;
    overflow: hidden;
}

// Text shadow
// ----------------
.text-shadow(...)
{
    @fnParseArgs:
        ~`parseArgs = function (a, defaultValue) {
            var arg = a.replace("[", "").replace("]", "") || defaultValue;
            if (!/^#?\w*%?([ X])/.test(arg)) {
                arg = arg.replace(/,(?=[^()]*\))/g, '--').replace(/,/g, "").replace(/--/g, ',');
            }
            return arg;
        }`;

    -webkit-text-shadow: ~`parseArgs("@{arguments}", "none")`;
    text-shadow: ~`parseArgs("@{arguments}", "none")`;
}

// Transitions
// ----------------
.transition(@value: all 0.25s ease-out)
{
    -webkit-transition: @value;
    -moz-transition: @value;
    -o-transition: @value;
    transition: @value;
}
.transition(@value1, @value2)
{
    .transition(@value1);
    .transition-append(@value2);
}
.transition-append(@value: all 0.25s ease-out)
{
    -webkit-transition+: @value;
    -moz-transition+: @value;
    -o-transition+: @value;
    transition+: @value;
}
.transition-transform(@transition: 0.25s ease-out)
{
    -webkit-transition: -webkit-transform @transition;
    -moz-transition: -moz-transform @transition;
    -o-transition: -o-transform @transition;
    transition: transform @transition;
}

// Word Break
// ----------------
.word-break(@break: break-all, @breakWebkit: break-word, @hyphens: auto)
{
    -ms-word-break: @break;
    word-break: @break;
    word-break: @breakWebkit; // Non standard for webkit
    -webkit-hyphens: @hyphens;
    -moz-hyphens: @hyphens;
    -ms-hyphens: @hyphens;
    hyphens: @hyphens;
    // The Hyphenate-Before or -after sets a minimum number of characters before or after the hyphenation.
    // And hyphenate-lines how many lines can be hyphenated in a row.
    // As you may have guessed, these are Webkit only. (06/24/2013)
    -webkit-hyphenate-before: 2;
    -webkit-hyphenate-after: 3;
    hyphenate-lines: 3;
}

// Gradients
// ----------------
@defaultLighten: 35%;
.gradient()
{
    // Horizontal
    // ----------------
    .horizontal(@startColor, @endColor, @fallbackColor, @startPosition: left, @repeat: no-repeat)
    {
        background-color: @fallbackColor;
        background-repeat: @repeat;
        background-image: -webkit-gradient(linear, left top, right top, from(@startColor), to(@endColor));  // Safari 4+, Chrome 2+
        background-image: -webkit-linear-gradient(@startPosition, @startColor 0, @endColor 100%);           // Safari 5.1+, Chrome 10+
        background-image: -moz-linear-gradient(@startPosition, @startColor 0, @endColor 100%);              // FF 3.6+
        background-image: -ms-linear-gradient(@startPosition, @startColor 0, @endColor 100%);               // IE10
        background-image: -o-linear-gradient(@startPosition, @startColor 0, @endColor 100%);                // Opera 11.10
        background-image: linear-gradient(@startPosition, @startColor 0, @endColor 100%);                   // Default
        -ms-filter: %("progid:DXImageTransform.Microsoft.gradient(startColorStr='%d', endColorStr='%d', GradientType=1))", @startColor, @endColor); // IE8
        filter: e(%("progid:DXImageTransform.Microsoft.Gradient(startColorstr='%d', endColorstr='%d', GradientType=1)", argb(@startColor), argb(@endColor)));   // IE9
    }
    .horizontal(@color: #0ae, @lighten: @defaultLighten)
    {
        .gradient.horizontal(lighten(@color, @lighten), @color, @color);
    }
    .horizontal(@color: #0ae)
    {
        .gradient.horizontal(lighten(@color, @defaultLighten), @color, @color);
    }

    // Vertical
    // ----------------
    .vertical(@startColor, @endColor, @fallbackColor, @startPosition: top, @repeat: no-repeat)
    {
        background-color: @fallbackColor;
        background-repeat: @repeat;
        background-image: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
        background-image: -webkit-linear-gradient(@startPosition, @startColor 0, @endColor 100%);
        background-image: -moz-linear-gradient(@startPosition, @startColor 0, @endColor 100%);
        background-image: -ms-linear-gradient(@startPosition, @startColor 0, @endColor 100%);
        background-image: -o-linear-gradient(@startPosition, @startColor 0, @endColor 100%);
        background-image: linear-gradient(@startPosition, @startColor 0, @endColor 100%);
        -ms-filter: %("progid:DXImageTransform.Microsoft.gradient(startColorStr='%d', endColorStr='%d', GradientType=0))", @startColor, @endColor);
        filter: e(%("progid:DXImageTransform.Microsoft.Gradient(startColorstr='%d', endColorstr='%d', GradientType=0)", argb(@startColor), argb(@endColor)));
    }
    .vertical(@color: #0ae, @lighten: @defaultLighten)
    {
        .gradient.vertical(lighten(@color, @lighten), @color, @color);
    }
    .vertical(@color: #0ae)
    {
        .gradient.vertical(lighten(@color, @defaultLighten), @color, @color);
    }

    // Vertical 3-colors
    // ----------------
    .vertical3x(@startColor, @midColor, @endColor, @colorStop: 50%, @repeat: no-repeat)
    {
        background-color: mix(@midColor, @endColor, 80%);
        background-repeat: @repeat;
        background-image: -webkit-gradient(linear, left top, left bottom, from(@startColor), color-stop(@colorStop, @midColor), to(@endColor));
        background-image: -webkit-linear-gradient(@startColor, @midColor @colorStop, @endColor);
        background-image: -moz-linear-gradient(top, @startColor, @midColor @colorStop, @endColor);
        background-image: -ms-linear-gradient(@startColor, @midColor @colorStop, @endColor);
        background-image: -o-linear-gradient(@startColor, @midColor @colorStop, @endColor);
        background-image: linear-gradient(@startColor, @midColor @colorStop, @endColor);
        filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)", argb(@startColor), argb(@endColor)));
    }
    .vertical3x(@color: #0ae)
    {
        .gradient.vertical3x(lighten(@color, 35%), darken(@color, 10%), @color);
    }
    .vertical3x(@startColor, @startPerc, @middleColor, @middlePerc, @endColor, @endPerc, @fallbackColor, @repeat: no-repeat)
    {
        background-color: @fallbackColor;
        background-repeat: @repeat;
        background-image: -webkit-gradient(linear, left top, left bottom, color-stop(@startPerc, @startColor), color-stop(@middlePerc, @middleColor), color-stop(@endPerc, @endColor));
        background-image: -webkit-linear-gradient(top, @startColor @startPerc, @middleColor @middlePerc, @endColor @endPerc);
        background-image: -moz-linear-gradient(top, @startColor @startPerc, @middleColor @middlePerc, @endColor @endPerc);
        background-image: -o-linear-gradient(top, @startColor @startPerc, @middleColor @middlePerc, @endColor @endPerc);
        background-image: -ms-linear-gradient(top, @startColor @startPerc, @middleColor @middlePerc, @endColor @endPerc);
        background-image: linear-gradient(top, @startColor @startPerc, @middleColor @middlePerc, @endColor @endPerc);
        filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)", argb(@startColor), argb(@endColor)));
    }

    // Directional
    // ----------------
    .directional(@startColor, @endColor, @fallbackColor, @angle: 45, @repeat: repeat-x)
    {
        background-color: @fallbackColor;
        background-repeat: @repeat;
        background-image: -webkit-linear-gradient(~"@{angle}deg", @startColor 0, @endColor 100%);
        background-image: -moz-linear-gradient(~"@{angle}deg", @startColor 0, @endColor 100%);
        background-image: -ms-linear-gradient(~"@{angle}deg", @startColor 0, @endColor 100%);
        background-image: -o-linear-gradient(~"@{angle}deg", @startColor 0, @endColor 100%);
        background-image: linear-gradient(~"@{angle}deg", @startColor 0, @endColor 100%);
        -ms-filter: %("progid:DXImageTransform.Microsoft.gradient(startColorStr='%d', endColorStr='%d', GradientType=0))", @startColor, @endColor);
        filter: e(%("progid:DXImageTransform.Microsoft.Gradient(startColorstr='%d', endColorstr='%d', GradientType=0)", argb(@startColor), argb(@endColor)));
    }
    .directional(@color: #0ae, @lighten: @defaultLighten)
    {
        .gradient.directional(lighten(@color, @lighten), @color, @color);
    }
    .directional(@color: #0ae)
    {
        .gradient.directional(lighten(@color, @defaultLighten), @color, @color);
    }

    // Radial
    // ----------------
    .radial(@innerColor, @outerColor, @fallbackColor, @shape: circle, @position: center, @repeat: no-repeat)
    {
        background-color: @fallbackColor;
        background-repeat: @repeat;
        background-image: -webkit-gradient(radial, center center, 0, center center, 460, from(@innerColor), to(@outerColor));
        background-image: -webkit-radial-gradient(@position, @shape, @innerColor 0, @outerColor 100%);
        background-image: -moz-radial-gradient(@position, @shape, @innerColor 0, @outerColor 100%);
        background-image: -ms-radial-gradient(@position, @shape, @innerColor 0, @outerColor 100%);
        background-image: -o-radial-gradient(@position, @shape, @innerColor 0, @outerColor 100%);
    }
    .radial(@color: #0ae, @lighten: @defaultLighten)
    {
        .gradient.radial(lighten(@color, @lighten), @color, @color);
    }
    .radial(@color: #0ae)
    {
        .gradient.radial(lighten(@color, @defaultLighten), @color, @color);
    }

    // Striped
    // ----------------
    .striped(@color, @angle, @tile-size, @opacity: .15, @repeat: repeat)
    {
        .background-size(@tile-size);
        background-color: @color;
        background-repeat: @repeat;
        background-image: -webkit-gradient(linear, left bottom, right top, color-stop(.25, rgba(255,255,255,@opacity)), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, rgba(255,255,255,@opacity)), color-stop(.75, rgba(255,255,255,@opacity)), color-stop(.75, transparent), to(transparent));
        background-image: -webkit-linear-gradient(~"@{angle}deg", rgba(255,255,255,@opacity) 25%, transparent 25%, transparent 50%, rgba(255,255,255,@opacity) 50%, rgba(255,255,255,@opacity) 75%, transparent 75%, transparent);
        background-image: -moz-linear-gradient(~"@{angle}deg", rgba(255,255,255,@opacity) 25%, transparent 25%, transparent 50%, rgba(255,255,255,@opacity) 50%, rgba(255,255,255,@opacity) 75%, transparent 75%, transparent);
        background-image: -ms-linear-gradient(~"@{angle}deg", rgba(255,255,255,@opacity) 25%, transparent 25%, transparent 50%, rgba(255,255,255,@opacity) 50%, rgba(255,255,255,@opacity) 75%, transparent 75%, transparent);
        background-image: -o-linear-gradient(~"@{angle}deg", rgba(255,255,255,@opacity) 25%, transparent 25%, transparent 50%, rgba(255,255,255,@opacity) 50%, rgba(255,255,255,@opacity) 75%, transparent 75%, transparent);
        background-image: linear-gradient(~"@{angle}deg", rgba(255,255,255,@opacity) 25%, transparent 25%, transparent 50%, rgba(255,255,255,@opacity) 50%, rgba(255,255,255,@opacity) 75%, transparent 75%, transparent);
    }
    .striped(@color: #0ae)
    {
        .gradient.striped(@color, 90, 50px 50px);
    }

    // Crossed
    // ----------------
    .crossed(@color, @top-color, @angle, @top-angle, @tile-size, @repeat: repeat)
    {
        .background-size(@tile-size);
        background-color: @color;
        background-repeat: @repeat;
        background-image: -webkit-linear-gradient(~"@{angle}deg", transparent 50%, @top-color 50%, @top-color), -webkit-linear-gradient(~"@{top-angle}deg", transparent 50%, @top-color 50%, @top-color);
        background-image: -moz-linear-gradient(~"@{angle}deg", transparent 50%, @top-color 50%, @top-color), -moz-linear-gradient(~"@{top-angle}deg", transparent 50%, @top-color 50%, @top-color);
        background-image: -ms-linear-gradient(~"@{angle}deg", transparent 50%, @top-color 50%, @top-color), -ms-linear-gradient(~"@{top-angle}deg", transparent 50%, @top-color 50%, @top-color);
        background-image: -o-linear-gradient(~"@{angle}deg", transparent 50%, @top-color 50%, @top-color), -o-linear-gradient(~"@{top-angle}deg", transparent 50%, @top-color 50%, @top-color);
        background-image: linear-gradient(~"@{angle}deg", transparent 50%, @top-color 50%, @top-color), linear-gradient(~"@{top-angle}deg", transparent 50%, @top-color 50%, @top-color);
    }
    .crossed(@color: #0ae)
    {
        .gradient.crossed(lighten(@color, 100%), fadeout(@color, 50%), 0, 90, 50px 50px);
    }
    .crossed(@color: #0ae, @angle: 0, @top-angle: 90, @tile-size: 50px 50px)
    {
        .gradient.crossed(lighten(@color, 100%), fadeout(@color, 50%), @angle, @top-angle, @tile-size);
    }
    .crossed(@color: #0ae, @top-angle: 90, @tile-size: 50px 50px)
    {
        .gradient.crossed(@color, 0, @top-angle, @tile-size);
    }

    // Checkered
    // ----------------
    .checkered(@color, @top-color, @angle, @tile-size, @repeat: repeat)
    {
        .background-size(@tile-size);
        background-color: @color;
        background-repeat: @repeat;
        background-image: -webkit-linear-gradient(~"@{angle}deg", @top-color 25%, transparent 25%, transparent), -webkit-linear-gradient(~"-@{angle}deg", @top-color 25%, transparent 25%, transparent), -webkit-linear-gradient(~"@{angle}deg", transparent 75%, @top-color 75%), -webkit-linear-gradient(~"-@{angle}deg", transparent 75%, @top-color 75%);
        background-image: -moz-linear-gradient(~"@{angle}deg", @top-color 25%, transparent 25%, transparent), -moz-linear-gradient(~"-@{angle}deg", @top-color 25%, transparent 25%, transparent), -moz-linear-gradient(~"@{angle}deg", transparent 75%, @top-color 75%), -moz-linear-gradient(~"-@{angle}deg", transparent 75%, @top-color 75%);
        background-image: -ms-linear-gradient(~"@{angle}deg", @top-color 25%, transparent 25%, transparent), -ms-linear-gradient(~"-@{angle}deg", @top-color 25%, transparent 25%, transparent), -ms-linear-gradient(~"@{angle}deg", transparent 75%, @top-color 75%), -ms-linear-gradient(~"-@{angle}deg", transparent 75%, @top-color 75%);
        background-image: -o-linear-gradient(~"@{angle}deg", @top-color 25%, transparent 25%, transparent), -o-linear-gradient(~"-@{angle}deg", @top-color 25%, transparent 25%, transparent), -o-linear-gradient(~"@{angle}deg", transparent 75%, @top-color 75%), -o-linear-gradient(~"-@{angle}deg", transparent 75%, @top-color 75%);
        background-image: linear-gradient(~"@{angle}deg", @top-color 25%, transparent 25%, transparent), linear-gradient(~"-@{angle}deg", @top-color 25%, transparent 25%, transparent), linear-gradient(~"@{angle}deg", transparent 75%, @top-color 75%), linear-gradient(~"-@{angle}deg", transparent 75%, @top-color 75%);
    }
    .checkered(@color: #0ae)
    {
        .gradient.checkered(lighten(@color, 100%), @color, 45, 50px 50px);
    }
    .checkered(@color: #0ae, @angle: 45, @tile-size: 50px 50px)
    {
        .gradient.checkered(lighten(@color, 100%), @color, @angle, @tile-size);
    }

    // Custom
    // ----------------
    .custom(@startColor, @endColor, @startColorPercentage, @endColorPercentage, @fromPosition, @fallbackColor, @repeat: no-repeat)
    {
        background: @fallbackColor;
        background-repeat: @repeat;
        background-image: -webkit-gradient(linear, 50% 100%, 50% 0, color-stop(@startColorPercentage, @startColor), color-stop(@endColorPercentage, @endColor));
        background-image: -webkit-linear-gradient(@fromPosition, @startColor @startColorPercentage, @endColor @endColorPercentage);
        background-image: -moz-linear-gradient(@fromPosition, @startColor @startColorPercentage, @endColor @endColorPercentage);
        background-image: -o-linear-gradient(@fromPosition, @startColor @startColorPercentage, @endColor @endColorPercentage);
        background-image: -ms-linear-gradient(@fromPosition, @startColor @startColorPercentage, @endColor @endColorPercentage);
        background-image: linear-gradient(@fromPosition, @startColor @startColorPercentage, @endColor @endColorPercentage);
    }
    .custom(@color: #D4347D)
    {
        .gradient.custom(@color, lighten(@color, 25%), 20%, 80%, bottom, lighten(@color, 10%));
    }

    // Uses whatever value is passed inside
    // ----------------
    .value(@value, @fallbackColor, @repeat: no-repeat)
    {
        background: @fallbackColor;
        background-repeat: @repeat;
        background-image: -webkit-linear-gradient(~'@{value}');
        background-image: -moz-linear-gradient(~'@{value}');
        background-image: -o-linear-gradient(~'@{value}');
        background-image: -ms-linear-gradient(~'@{value}');
        background-image: linear-gradient(~'@{value}');
    }
    .values(@value, @value2, @fallbackColor, @repeat: no-repeat)
    {
        background: @fallbackColor;
        background-repeat: @repeat;
        background-image: -webkit-linear-gradient(~'@{value}'), -webkit-linear-gradient(~'@{value2}');
        background-image: -moz-linear-gradient(~'@{value}'), -moz-linear-gradient(~'@{value2}');
        background-image: -o-linear-gradient(~'@{value}'), -o-linear-gradient(~'@{value2}');
        background-image: -ms-linear-gradient(~'@{value}'), -ms-linear-gradient(~'@{value2}');
        background-image: linear-gradient(~'@{value}'), linear-gradient(~'@{value2}');
    }

    // Reset gradient
    // ----------------
    .reset(@fallbackColor)
    {
        background-color: @fallbackColor;
        background-image: none;
        -ms-filter: "none";
        filter: none;
    }
}

// Transformations
// ----------------
.transform(@value)
{
    -webkit-transform: @value;
    -moz-transform: @value;
    -ms-transform: @value;
    -o-transform: @value;
    transform: @value;

    // Specifies how nested elements are rendered in 3D space
    // -------------------------
    .style(@value: preserve-3d)
    {
        -webkit-transform-style: @value;
        transform-style: @value;
    }

    // Defines a perspective view for a 3D transformed element
    // -------------------------
    .perspective(@value: 1000)
    {
        -moz-perspective: @value;
        -ms-perspective: @value;
        -webkit-perspective: @value;
        perspective: @value;
    }

    // Set a 3D element's base placement
    // -------------------------
    .perspective-origin(@value: 50% 100px)
    {
        -webkit-perspective-origin: @value;
        -moz-perspective-origin: @value;
        -ms-perspective-origin: @value;
        perspective-origin: @value;
    }

    // Defines a 2D rotation, the angle is specified in the parameter
    // -------------------------
    .rotate(@deg:35)
    {
        .transform(rotate(~"@{deg}deg"));
    }

    // Defines a 3D rotation along the X-axis 
    // -------------------------
    .rotateX(@deg:35)
    {
        .transform(rotateX(~"@{deg}deg"));
    }

    // Defines a 3D rotation along the Y-axis 
    // -------------------------
    .rotateY(@deg:35)
    {
        .transform(rotateY(~"@{deg}deg"));
    }

    // Defines a 3D rotation along the Z-axis 
    // -------------------------
    .rotateZ(@deg:35)
    {
        .transform(rotateZ(~"@{deg}deg"));
    }

    // Defines a 3D rotation
    // -------------------------
    .rotate3D(@x:1, @y:1, @z:1, @deg:35)
    {
        .transform(rotate3d(@x, @y, @z, ~"@{deg}deg"));
    }

    // Defines a 2D scale transformation 
    // -------------------------
    .scale(@x:1, @y:1)
    {
        .transform(scale(@x, @y));
    }

    // Defines a 3D scale transformation 
    // -------------------------
    .scale3D(@x:1, @y:1, @z:1)
    {
        .transform(scale3d(@x, @y, @z));
    }

    // Defines a 2D skew transformation along the X- and the Y-axis 
    // -------------------------
    .skew(@angleX:35, @angleY:35)
    {
        .transform(skew(~"@{angleX}deg", ~"@{angleY}deg"));
    }

    // Defines a 2D translation 
    // -------------------------
    .translate(@x:10px, @y:10px)
    {
        .transform(translate(@x, @y));
    }

    // Defines a 3D translation 
    // -------------------------
    .translate3D(@x:10px, @y:10px, @z:10px)
    {
        .transform(translate3d(@x, @y, @z));
    }

    // Defines a 2D translation along the X-axis
    // -------------------------
    .translateX(@x:10px)
    {
        .transform(translateX(@x));
    }

    // Defines a 2D translation along the Y-axis
    // -------------------------
    .translateY(@y:10px)
    {
        .transform(translateY(@y));
    }

    // Defines a 3D translation along the Z-axis
    // -------------------------
    .translateZ(@z:10px)
    {
        .transform(translateZ(@z));
    }
}

// Fonts
//  Usage:
//   .font-face('league_gothic-webfont', 'LeagueGothic');
//   .font-face('fontawesome-webfont', 'FontAwesome');
//   .font-face('entypo', 'entypo');
// ----------------
.font-face(@font, @family, @weight: normal, @style: normal, @path: '/font')
{
    @font-face
    {
        font-family: ~'@{family}';
        src: url(~'@{path}/@{font}.eot');                                       /* IE9 Compat Modes */
        src: url(~'@{path}/@{font}.eot?#iefix') format('embedded-opentype'),    /* IE6-IE8 */
             url(~'@{path}/@{font}.woff') format('woff'),                       /* Modern Browsers */
             url(~'@{path}/@{font}.ttf') format('truetype'),                    /* Safari, Android, iOS */
             url(~'@{path}/@{font}.svg#@{family}') format('svg');               /* Legacy iOS */
        font-weight: @weight;
        font-style: @style;
    }
}

// Global reset by Eric Meyer (v2.0 | 20110126)
//  Source: http://meyerweb.com/eric/tools/css/reset/
// -------------------------
.global-reset()
{
    html, body, div, span, applet, object, iframe,
    h1, h2, h3, h4, h5, h6, p, blockquote, pre,
    a, abbr, acronym, address, big, cite, code,
    del, dfn, em, img, ins, kbd, q, s, samp,
    small, strike, strong, sub, sup, tt, var,
    b, u, i, center,
    dl, dt, dd, ol, ul, li,
    fieldset, form, label, legend,
    table, caption, tbody, tfoot, thead, tr, th, td,
    article, aside, canvas, details, embed, 
    figure, figcaption, footer, header, hgroup, 
    menu, nav, output, ruby, section, summary,
    time, mark, audio, video {
        margin: 0;
        padding: 0;
        border: 0;
        font-size: 100%;
        font: inherit;
        vertical-align: baseline;
    }
    article, aside, details, figcaption, figure, 
    footer, header, hgroup, menu, nav, section {
        display: block;
    }
    body {
        line-height: 1;
    }
    ol, ul {
        list-style: none;
    }
    blockquote, q {
        quotes: none;
    }
    blockquote:before, blockquote:after,
    q:before, q:after {
        content: '';
        content: none;
    }
    table {
        border-collapse: collapse;
        border-spacing: 0;
    }
    strong {
        font-weight:bold;
    }
}

// A modern, HTML5-ready alternative to CSS resets (as used by Twitter Bootstrap, HTML5 Boilerplate, TweetDeck, Soundcloud, and many others)
// http://necolas.github.io/normalize.css/
// v2.1.2 | 20130624
// -------------------------
.normalize()
{
    //
    // =========================
    // HTML4
    // =========================
    //
    // Inheritance from Eric Meyer's reset.
    html, body, div, span, applet, object, iframe,
    h1, h2, h3, h4, h5, h6, p, blockquote, pre,
    a, abbr, acronym, address, big, cite, code,
    del, dfn, em, img, ins, kbd, q, s, samp,
    small, strike, strong, sub, sup, tt, var,
    b, u, i, center,
    dl, dt, dd, ol, ul, li,
    fieldset, form, label, legend,
    table, caption, tbody, tfoot, thead, tr, th, td,
    article, aside, canvas, details, embed,
    figure, figcaption, footer, header, hgroup,
    menu, nav, output, ruby, section, summary,
    time, mark, audio, video
    {
        margin: 0;
        padding: 0;
        border: 0;
    }
    ol, ul
    {
        list-style: none;
    }
    blockquote, q
    {
        quotes: none;
    }
    //
    // =========================
    // HTML5 display definitions
    // =========================
    //
    // Correct 'block' display not defined in IE 8/9.
    article,
    aside,
    details,
    figcaption,
    figure,
    footer,
    header,
    hgroup,
    main,
    nav,
    section,
    summary
    {
        display: block;
    }
    //
    // Correct 'inline-block' display not defined in IE 8/9.
    audio,
    canvas,
    video
    {
        display: inline-block;
    }
    //
    // Prevent modern browsers from displaying 'audio' without controls.
    // Remove excess height in iOS 5 devices.
    audio:not([controls])
    {
        display: none;
        height: 0;
    }
    //
    // Address styling not present in IE 8/9.
    [hidden]
    {
        display: none;
    }
    //
    // =========================
    // Base
    // =========================
    //
    // 1. Set default font family to sans-serif.
    // 2. Prevent iOS text size adjust after orientation change, without disabling user zoom.
    html
    {
        font-family: sans-serif; // 1
        -ms-text-size-adjust: 100%; // 2
        -webkit-text-size-adjust: 100%; // 2
    }
    //
    // Remove default margin.
    body
    {
        margin: 0;
    }
    //
    // =========================
    // Links
    // =========================
    //
    // Address 'outline' inconsistency between Chrome and other browsers.
    a:focus
    {
        outline: thin dotted;
    }
    //
    // Improve readability when focused and also mouse hovered in all browsers.
    a:active,
    a:hover
    {
        outline: 0;
    }
    //
    // =========================
    // Typography
    // =========================
    //
    // Address variable 'h1' font-size and margin within 'section' and 'article' contexts in Firefox 4+, Safari 5, and Chrome.
    h1
    {
        font-size: 2em;
        margin: 0.67em 0;
    }
    //
    // Address styling not present in IE 8/9, Safari 5, and Chrome.
    abbr[title]
    {
        border-bottom: 1px dotted;
    }
    //
    // Address style set to 'bolder' in Firefox 4+, Safari 5, and Chrome.
    b,
    strong
    {
        font-weight: bold;
    }
    //
    // Address styling not present in Safari 5 and Chrome.
    dfn
    {
        font-style: italic;
    }
    //
    // Address differences between Firefox and other browsers.
    hr
    {
        .box-sizing(border-box);
        height: 0;
    }
    //
    // Address styling not present in IE 8/9.
    mark
    {
        background: #ff0;
        color: #000;
    }
    //
    // Correct font family set oddly in Safari 5 and Chrome.
    code,
    kbd,
    pre,
    samp
    {
        font-family: monospace, serif;
        font-size: 1em;
    }
    //
    // Improve readability of pre-formatted text in all browsers.
    pre
    {
        white-space: pre-wrap;
    }
    //
    // Set consistent quote types.
    q
    {
        quotes: "\201C" "\201D" "\2018" "\2019";
    }
    //
    // Address inconsistent and variable font size in all browsers.
    small
    {
        font-size: 80%;
    }
    //
    // Prevent 'sub' and 'sup' affecting 'line-height' in all browsers.
    sub,
    sup
    {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
    }

    sup
    {
        top: -0.5em;
    }

    sub
    {
        bottom: -0.25em;
    }
    //
    // =========================
    // Embedded content
    // =========================
    //
    // Remove border when inside 'a' element in IE 8/9.
    img
    {
        border: 0;
    }
    //
    // Correct overflow displayed oddly in IE 9.
    svg:not(:root)
    {
        overflow: hidden;
    }
    //
    // =========================
    // Figures
    // =========================
    //
    // Address margin not present in IE 8/9 and Safari 5.
    figure
    {
        margin: 0;
    }
    //
    // =========================
    // Forms
    // =========================
    //
    // Define consistent border, margin, and padding.
    fieldset
    {
        border: 1px solid #c0c0c0;
        margin: 0 2px;
        padding: 0.35em 0.625em 0.75em;
    }
    //
    // 1. Correct 'color' not being inherited in IE 8/9.
    // 2. Remove padding so people aren't caught out if they zero out fieldsets.
    legend
    {
        border: 0; // 1
        padding: 0; // 2
    }
    //
    // 1. Correct font family not being inherited in all browsers.
    // 2. Correct font size not being inherited in all browsers.
    // 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
    button,
    input,
    select,
    textarea
    {
        font-family: inherit; // 1
        font-size: 100%; // 2
        margin: 0; // 3
    }
    //
    // Address Firefox 4+ setting 'line-height' on 'input' using '!important' in the UA stylesheet.
    button,
    input
    {
        line-height: normal;
    }
    //
    // Address inconsistent 'text-transform' inheritance for 'button' and 'select'.
    // All other form control elements do not inherit 'text-transform' values.
    // Correct 'button' style inheritance in Chrome, Safari 5+, and IE 8+.
    // Correct 'select' style inheritance in Firefox 4+ and Opera.
    button,
    select
    {
        text-transform: none;
    }
    //
    // 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native 'audio' and 'video' controls.
    // 2. Correct inability to style clickable 'input' types in iOS.
    // 3. Improve usability and consistency of cursor style between image-type 'input' and others.
    button,
    html input[type="button"], // 1
    input[type="reset"],
    input[type="submit"]
    {
        .appearance(button); // 2
        cursor: pointer; // 3
    }
    //
    // Re-set default cursor for disabled elements.
    button[disabled],
    html input[disabled]
    {
        cursor: default;
    }
    //
    // 1. Address box sizing set to 'border-box' in IE 8/9.
    // 2. Remove excess padding in IE 8/9.
    input[type="checkbox"],
    input[type="radio"]
    {
        .box-sizing(border-box); // 1
        padding: 0; // 2
    }
    //
    // 1. Address 'appearance' set to 'searchfield' in Safari 5 and Chrome.
    // 2. Address 'box-sizing' set to 'border-box' in Safari 5 and Chrome (include '-moz' to future-proof).
    input[type="search"]
    {
        .appearance(textfield); // 1
        .box-sizing(border-box); // 2
    }
    //
    // Remove inner padding and search cancel button in Safari 5 and Chrome on OS X.
    input[type="search"]::-webkit-search-cancel-button,
    input[type="search"]::-webkit-search-decoration
    {
        .appearance.reset();
    }
    //
    // Remove inner padding and border in Firefox 4+.
    button::-moz-focus-inner,
    input::-moz-focus-inner
    {
        border: 0;
        padding: 0;
    }
    //
    // 1. Remove default vertical scrollbar in IE 8/9.
    // 2. Improve readability and alignment in all browsers.
    textarea
    {
        overflow: auto; // 1
        vertical-align: top; // 2
    }
    //
    // =========================
    // Tables
    // =========================
    //
    // Remove most spacing between table cells.
    table
    {
        border-collapse: collapse;
        border-spacing: 0;
    }
}
